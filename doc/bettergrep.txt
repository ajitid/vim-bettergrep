*bettergrep.txt* vim-bettergrep A better way to grep

==============================================================================
Author: Qusai Al Shidi <me@qalshidi.science>               *bettergrep-author*
License: MIT License (see |bettergrep-license|)
Website: https://github.com/qalshidi/vim-bettergrep

==============================================================================
INTRODUCTION                                                      *bettergrep*

This plugin uses ideas from RomainL's gist
(https://gist.github.com/romainl/56f0c28ef953ffc157f36cc495947ab3)
about improving how Vim does grep. If you are using NeoVim or a recent version
of Vim 8+, this will also grep asynchronously. The intended use is as a
replacement to Vim's built-in |:grep| family of functions.
This plugin by default replaces the default command-line mode commands with
the custom-made ones from this plugin.

:Grep [options] {pattern} [{directory}]                                *:Grep*

    Search recursively in {directory} (defaults to current directory) for
    {pattern}. You may uses [options] corresponding to the grep program set by
    |g:bettergrepprg|. It will populate the |quickfix| window and open it 
    with the results. If your pattern contains a space consider enclosing
    it in single quotes ('). Typing |:grep| in |command-line mode| will replace
    it with |:Grep|.
    To turn off this behavior, see |g:bettergrep_no_abbrev|.

    bettergrep runs the command in shell. If you want to search a pattern with
    a space try enclosing the pattern with a single-quote. >
        :Grep 'my pattern' path/to/file
<
    see: |:grep|

:LGrep [options] {pattern} [{directory}]                              *:LGrep*

    Like |:Grep| but populates the |location-list| instead.

    see: |:lgrep|

:Grepadd [options] {pattern} [{directory}]                          *:Grepadd*

    Like |:Grep| but adds to the |quickfix| window without removing what's
    there.

    see: |:grepadd|

:LGrepadd [options] {pattern} [{directory}]

    Like |:Grepadd| but with the |location-list| window instead.

    see: |:lgrepadd|

==============================================================================
MAPPINGS                                                 *bettergrep-mappings*

These are a list of default mappings in bettergrep. To disable them add >
    let g:bettergrep_no_mappings = 1
< to your |vimrc|.

                                                      *bettergrep-normal-mode*
Normal Mode Mappings ~

                                                           *bettergrep-CTRL-G*
CTRL-G          Insert |:Grep| into command-line mode and start cursor after
                it.

                                                            *bettergrep-ALT-G*
ALT-G           Insert |:Grepadd| into the command-line mode and start cursor
                after it.

                                                      *bettergrep-mappings-qf*
Quickfix Window Mappings ~

q ..............Close |quickfix| window.
J ..............Go to next match (helpful when using context arguments)
K ..............Go to previous match.
t ..............Open in a new tab. See: |tab-page|
T ..............Open in new tab but keep focus on |quickfix| window.
<Enter> ........Open current selection.
o ..............Open current selection.
O ..............Open current selection and keep focus on |quickfix| window.
i ..............Open in horizontal |split|.
I ..............Open in horizontal |split| and keep focus on |quickfix| window.
s ..............Open in |vertical| split window.
S ..............Open in |vertical| split and keep focus on |quickfix| window.
go .............Open current selection and close |quickfix| window.
gi .............Open in horizontal |split| and close |quickfix| window.
gs .............Open in |vertical| split and close quickfix window.
g? .............Open this |help|.

To override or add to these mappings use the |g:bettergrep_qf_mappings|
dictionary. Example: >
    let g:bettergrep_qf_mappings = {'x': ':cclose<CR>'}  " close window
<
==============================================================================
CONFIGURATION                                       *bettergrep-configuration*

g:bettergrepprg                                              *g:bettergrepprg*

    Defaults to (in order):
        - ripgrep             ("rg --vimgrep")
        - The Silver Searcher ("ag --vimgrep")
        - ack             ("ack -s -H --nopager --nocolor --nogroup --column")
        - |'grepprg'|
    
    Set this to whatever you would like to grep with.
    Example: >
        let g:bettergrpprg = "git grep -n"
<

g:bettergrep_no_abbrev                                *g:bettergrep_no_abbrev*

    Default: 0

    Set this to 1 if you don't want your command-line rewritten for legacy
    |:grep| commands.
    Example: >
        let g:bettergrep_no_abbrev = 1
<
g:bettergrep_no_mappings                            *g:bettergrep_no_mappings*

    Default: 0

    Set this to 1 if you don't want the default |CTRL-G| to map to |:Grep|
    Example: >
        let g:bettergrep_no_mappings = 1
<
    see: |bettergrep-CTRL-G|

                                                    *g:bettergrep_qf_mappings*
g:bettergrep_qf_mappings

    This is a dictionary in which you can add mappings to the quickfix window
    made by bettergrep.
    Example: >
        let g:bettergrep_qf_mappings = {'x': ':cclose<CR>'}  " close qf window
<
    You can also override mappings and even bring mappings to their original
    state like so: >
        let g:bettergrep_qf_mappings['t'] = 't'
<
==============================================================================
LICENSE                                                   *bettergrep-license*

Copyright 2020 Qusai Al Shidi

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"), to
deal in the Software without restriction, including without limitation the
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
sell copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
IN THE SOFTWARE.

vim:set et ft=help sw=4 ts=4 tw=78:
